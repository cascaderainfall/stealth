{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "53c3318cbc7eaf3a2a7d4d28d81b9429",
    "entities": [
      {
        "tableName": "subscription",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL COLLATE NOCASE, `time` INTEGER NOT NULL, `icon` TEXT, `profile_id` INTEGER NOT NULL, PRIMARY KEY(`name`, `profile_id`), FOREIGN KEY(`profile_id`) REFERENCES `profile`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileId",
            "columnName": "profile_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "name",
            "profile_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_subscription_profile_id",
            "unique": false,
            "columnNames": [
              "profile_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_subscription_profile_id` ON `${TABLE_NAME}` (`profile_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "profile",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "profile_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`post_id` TEXT NOT NULL, `time` INTEGER NOT NULL, `profile_id` INTEGER NOT NULL, PRIMARY KEY(`post_id`, `profile_id`), FOREIGN KEY(`profile_id`) REFERENCES `profile`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "postId",
            "columnName": "post_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "profileId",
            "columnName": "profile_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "post_id",
            "profile_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_history_profile_id",
            "unique": false,
            "columnNames": [
              "profile_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_history_profile_id` ON `${TABLE_NAME}` (`profile_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "profile",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "profile_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "profile",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "post",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `subreddit` TEXT NOT NULL, `title` TEXT NOT NULL, `ratio` INTEGER NOT NULL, `total_awards` INTEGER NOT NULL, `oc` INTEGER NOT NULL, `score` TEXT NOT NULL, `type` INTEGER NOT NULL, `domain` TEXT NOT NULL, `self` INTEGER NOT NULL, `self_text_html` TEXT, `suggested_sorting` TEXT NOT NULL, `nsfw` INTEGER NOT NULL, `preview` TEXT, `spoiler` INTEGER NOT NULL, `archived` INTEGER NOT NULL, `locked` INTEGER NOT NULL, `poster_type` INTEGER NOT NULL, `author` TEXT NOT NULL, `comments_number` TEXT NOT NULL, `permalink` TEXT NOT NULL, `stickied` INTEGER NOT NULL, `url` TEXT NOT NULL, `created` INTEGER NOT NULL, `media_type` TEXT NOT NULL, `media_url` TEXT NOT NULL, `time` INTEGER NOT NULL, `profile_id` INTEGER NOT NULL, PRIMARY KEY(`id`, `profile_id`), FOREIGN KEY(`profile_id`) REFERENCES `profile`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subreddit",
            "columnName": "subreddit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ratio",
            "columnName": "ratio",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalAwards",
            "columnName": "total_awards",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOC",
            "columnName": "oc",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isSelf",
            "columnName": "self",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "selfTextHtml",
            "columnName": "self_text_html",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "suggestedSorting",
            "columnName": "suggested_sorting",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isOver18",
            "columnName": "nsfw",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "preview",
            "columnName": "preview",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSpoiler",
            "columnName": "spoiler",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isArchived",
            "columnName": "archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isLocked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "posterType",
            "columnName": "poster_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "commentsNumber",
            "columnName": "comments_number",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permalink",
            "columnName": "permalink",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isStickied",
            "columnName": "stickied",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaType",
            "columnName": "media_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaUrl",
            "columnName": "media_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "profileId",
            "columnName": "profile_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id",
            "profile_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_post_profile_id",
            "unique": false,
            "columnNames": [
              "profile_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_post_profile_id` ON `${TABLE_NAME}` (`profile_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "profile",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "profile_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "comment",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`total_awards` INTEGER NOT NULL, `link_id` TEXT NOT NULL, `author` TEXT NOT NULL, `score` TEXT NOT NULL, `body_html` TEXT NOT NULL, `edited` INTEGER NOT NULL, `submitter` INTEGER NOT NULL, `stickied` INTEGER NOT NULL, `score_hidden` INTEGER NOT NULL, `permalink` TEXT NOT NULL, `id` TEXT NOT NULL, `created` INTEGER NOT NULL, `controversiality` INTEGER NOT NULL, `poster_type` INTEGER NOT NULL, `link_title` TEXT, `link_permalink` TEXT, `link_author` TEXT, `subreddit` TEXT NOT NULL, `name` TEXT NOT NULL, `time` INTEGER NOT NULL, `profile_id` INTEGER NOT NULL, PRIMARY KEY(`name`, `profile_id`), FOREIGN KEY(`profile_id`) REFERENCES `profile`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "totalAwards",
            "columnName": "total_awards",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkId",
            "columnName": "link_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bodyHtml",
            "columnName": "body_html",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "edited",
            "columnName": "edited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSubmitter",
            "columnName": "submitter",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "stickied",
            "columnName": "stickied",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scoreHidden",
            "columnName": "score_hidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "permalink",
            "columnName": "permalink",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "controversiality",
            "columnName": "controversiality",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "posterType",
            "columnName": "poster_type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "linkTitle",
            "columnName": "link_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "linkPermalink",
            "columnName": "link_permalink",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "linkAuthor",
            "columnName": "link_author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subreddit",
            "columnName": "subreddit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "profileId",
            "columnName": "profile_id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "name",
            "profile_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_comment_profile_id",
            "unique": false,
            "columnNames": [
              "profile_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_comment_profile_id` ON `${TABLE_NAME}` (`profile_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "profile",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "profile_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "redirect",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pattern` TEXT NOT NULL, `redirect` TEXT NOT NULL, `service` TEXT NOT NULL, `mode` INTEGER NOT NULL, PRIMARY KEY(`service`))",
        "fields": [
          {
            "fieldPath": "pattern",
            "columnName": "pattern",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "redirect",
            "columnName": "redirect",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "service",
            "columnName": "service",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mode",
            "columnName": "mode",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "service"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '53c3318cbc7eaf3a2a7d4d28d81b9429')"
    ]
  }
}